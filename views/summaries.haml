- unless pages.empty?
  - per_page = Nesta::Config.fetch('per_page', 8)
  - page = params[:page].nil? ? 1 : params[:page].to_i
  - start_page = (page - 1) * per_page
  - end_page = page * per_page - 1
  - all_pages = Nesta::Page.find_articles
  - pages = all_pages[start_page..end_page]
  - all_pages.size
  %ol
    - pages.each do |page|
      %li
        %article
          %header
            %h1
              %a(href="#{path_to(page.abspath)}")= page.link_text
          - if page.summary.nil? || page.summary.empty?
            - cut = page.body(self).split('<cut>')
            ~ cut.first
            -if cut.size > 1
              %p.youtube.read_more
                %a(href="#{path_to(page.abspath)}")= page.read_more
          - else
            ~ page.summary
            %p.read_more.youtube
              %a(href="#{path_to(page.abspath)}")= page.read_more
          = haml :page_meta, :layout => false, :locals => { :page => page }

    -if page*per_page < all_pages.size
      %a{href:"/?page=#{page+1}"} &larr; Назад
    -if page > 1
      %a{href:"/?page=#{page-1}"} Вперед &rarr;
